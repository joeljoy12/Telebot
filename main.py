from telegram import Bot, Update
from telegram.ext import CommandHandler, CallbackContext, Updater
from web3 import Web3
import requests

# Set up your Telegram Bot Token and Smart Contract details
TELEGRAM_BOT_TOKEN = "6764883882:AAErfr_ZkA1NfK7xhWdU-33IIK4_AQonupQ"
SMART_CONTRACT_ADDRESS = "0x36f93fdc4ddE9833dBBC0A529Da89569071db93E"
WEB3_PROVIDER_URL = "wss://mainnet.infura.io/ws/v3/de282fabe3b14dfdb3f9b7579a7b2bae"

# Initialize the Telegram 
bot = Bot(token=TELEGRAM_BOT_TOKEN)
updater = Updater(bot=bot, use_context=True)
dispatcher = updater.dispatcher

# Initialize the Web3 connection
web3 = Web3(Web3.HTTPProvider(WEB3_PROVIDER_URL))

# Set the connection pool size to 16 (or any other desired value)
session = requests.Session()
session.mount('http://', requests.adapters.HTTPAdapter(pool_connections=16, pool_maxsize=32))

# Define the command to start tracking
def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text('Tracking presale buys. Use /check to get updates.')

# Define the command to check presale information
def check(update: Update, context: CallbackContext) -> None:
    # Example:
    contract = web3.eth.contract(address=SMART_CONTRACT_ADDRESS, abi=[[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"AlreadyAMultiSigWallet","type":"error"},{"inputs":[],"name":"AlreadyClaimed","type":"error"},{"inputs":[],"name":"AmountExceedsAvailableTokens","type":"error"},{"inputs":[],"name":"AmountMustBeLessThanAvailableTokens","type":"error"},{"inputs":[],"name":"CannotClaimNativeTokens","type":"error"},{"inputs":[],"name":"CannotSetDateInPast","type":"error"},{"inputs":[],"name":"CannotSetThePastRoundPrice","type":"error"},{"inputs":[],"name":"ClaimsAreEnabledAlready","type":"error"},{"inputs":[],"name":"ClaimsAreNotAvailableYet","type":"error"},{"inputs":[],"name":"ETHRefundFailed","type":"error"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidRound","type":"error"},{"inputs":[],"name":"MaxWalletCapReached","type":"error"},{"inputs":[],"name":"MinimumAmountIs10USD","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"PresaleIsOver","type":"error"},{"inputs":[],"name":"PresaleIsPaused","type":"error"},{"inputs":[],"name":"PresaleRoundIsAlreadyOver","type":"error"},{"inputs":[],"name":"PriceCantNotBeZero","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"TokenClaimFailed","type":"error"},{"inputs":[],"name":"USDPaymentFailed","type":"error"},{"inputs":[],"name":"UpdateBoolValue","type":"error"},{"inputs":[],"name":"ValuesAlreadyExists","type":"error"},{"inputs":[],"name":"ZeroAddressNotAllowed","type":"error"},{"inputs":[],"name":"ZeroAmountNotAllowed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bool","name":"value","type":"bool"}],"name":"ClaimEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newMultiSig","type":"address"}],"name":"MultiSigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"round","type":"uint256"}],"name":"NextRoundStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"newEndTime","type":"uint256"}],"name":"PresaleDateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bool","name":"value","type":"bool"}],"name":"PresalePaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"currentRoundPrice","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nextRoundPrice","type":"uint256"}],"name":"PriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"usd","type":"uint256"}],"name":"TokensBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensClaimed","type":"event"},{"inputs":[],"name":"USDT","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"addTokensToSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"buyWithETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_usdAmount","type":"uint256"}],"name":"buyWithUSDT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimEther","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"othertkn","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimOtherERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enableClaims","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ethUSDHelper","outputs":[{"internalType":"uint256","name":"usdAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getClaimStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEndDateOfCurrentRound","outputs":[{"internalType":"uint256","name":"endDate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getHardcapCurrentRound","outputs":[{"internalType":"uint256","name":"hardcap","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRaisedAmountCurrentRound","outputs":[{"internalType":"uint256","name":"raised","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_usdAmount","type":"uint256"}],"name":"getTokenAmount","outputs":[{"internalType":"uint256","name":"tokensOutput","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"multiSig","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"presalePausedStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"removeTokensFromSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rounds","outputs":[{"internalType":"uint256","name":"currentPrice","type":"uint256"},{"internalType":"uint256","name":"nextPrice","type":"uint256"},{"internalType":"uint256","name":"totalTokens","type":"uint256"},{"internalType":"uint256","name":"totalSold","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"endDate","type":"uint256"}],"name":"setEndDateForCurrentRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newPrice","type":"uint256"},{"internalType":"uint256","name":"_nextPrice","type":"uint256"}],"name":"setPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"setToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"switchToNextRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"togglePauseUnpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalTokensForSale","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalTokensSold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalUSDRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_multisig","type":"address"}],"name":"updateMultiSigWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"users","outputs":[{"internalType":"uint256","name":"totalUSDContributed","type":"uint256"},{"internalType":"uint256","name":"totalTokensBought","type":"uint256"},{"internalType":"uint256","name":"totalTokensClaimed","type":"uint256"}],"stateMutability":"view","type":"function"}]]  # Your ABI goes here

    # Get total raised, total tokens sold, and raised amount in the current round
    total_usd_raised = contract.functions.totalUSDRaised().call()
    total_tokens_sold = contract.functions.totalTokensSold().call()
    raised_current_round = contract.functions.getRaisedAmountCurrentRound().call()

    update.message.reply_text(f"Total USD Raised: {total_usd_raised}")
    update.message.reply_text(f"Total Tokens Sold: {total_tokens_sold}")
    update.message.reply_text(f"Raised Amount in Current Round: {raised_current_round}")

# Add command handlers to the dispatcher
start_handler = CommandHandler('start', start)
dispatcher.add_handler(start_handler)

check_handler = CommandHandler('check', check)
dispatcher.add_handler(check_handler)

# Start the bot
updater.start_polling()
updater.idle()

